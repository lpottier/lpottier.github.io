@inproceedings{cluster18,
 abstract = {Co-scheduling techniques are used to improve the throughput of applications on chip multiprocessors (CMP), but sharing resources often generates critical interferences. We focus on the interferences in the last level of cache (LLC) and use the Cache Allocation Technology (CAT) recently provided by Intel to partition the LLC and give each co-scheduled application their own cache area. We consider m iterative HPC applications running concurrently and answer the following questions: (i) how to precisely model the behavior of these applications on the cache partitioned platform? and (ii) how many cores and cache fractions should be assigned to each application to maximize the platform efficiency? Here, platform efficiency is defined as maximizing the performance either globally, or as guaranteeing a fixed ratio of iterations per second for each application. Through extensive experiments using CAT, we demonstrate the impact of cache partitioning when multiple HPC application are co-scheduled onto CMP platforms.},
 author = {Guillaume Aupy and
Anne Benoit and
Brice Goglin and
Lo√Øc Pottier and
Yves Robert},
 booktitle = {IEEE International Conference on Cluster Computing, CLUSTER 2018,
Belfast, UK, September 10-13, 2018},
 doi = {10.1109/CLUSTER.2018.00052},
 keywords = {mine,ensl},
 pages = {348--358},
 publisher = {IEEE Computer Society},
 title = {Co-Scheduling HPC Workloads on Cache-Partitioned CMP Platforms},
 url = {https://doi.org/10.1109/CLUSTER.2018.00052},
 year = {2018}
}


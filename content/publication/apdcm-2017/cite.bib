@inproceedings{apdcm2017,
 abstract = {Cache-partitioned architectures allow subsections of the shared last-level cache (LLC) to be exclusively reserved for some applications. This technique dramatically limits interactions between applications that are concurrently executing on a multicore machine. Consider n applications that execute concurrently, with the objective to minimize the makespan, defined as the maximum completion time of the n applications. Key scheduling questions are: (i) which proportion of cache and (ii) how many processors should be given to each application? Here, we assign rational numbers of processors to each application, since they can be shared across applications through multi-threading. In this paper, we provide answers to (i) and (ii) for perfectly parallel applications. Even though the problem is shown to be NP-complete, we give key elements to determine the subset of applications that should share the LLC (while remaining ones only use their smaller private cache). Building upon these results, we design efficient heuristics for general applications. Extensive simulations demonstrate the usefulness of co-scheduling when our efficient cache partitioning strategies are deployed.},
 author = {Guillaume Aupy and
Anne Benoit and
Lo√Øc Pottier and
Padma Raghavan and
Yves Robert and
Manu Shantharam},
 booktitle = {2017 IEEE International Parallel and Distributed Processing Symposium
Workshops, IPDPS Workshops 2017, Orlando / Buena Vista, FL, USA,
May 29 - June 2, 2017},
 doi = {10.1109/IPDPSW.2017.60},
 isbn = {978-1-5386-3408-0},
 issn = {},
 keywords = {mine,ensl},
 location = {Lake Buena Vista, FL, USA},
 month = {05},
 pages = {874--883},
 publisher = {IEEE Computer Society},
 title = {Co-Scheduling Algorithms for Cache-Partitioned Systems},
 url = {https://doi.org/10.1109/IPDPSW.2017.60},
 year = {2017}
}

